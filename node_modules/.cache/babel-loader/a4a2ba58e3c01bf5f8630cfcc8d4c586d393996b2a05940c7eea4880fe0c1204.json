{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Documents/assign/kanban-todo/src/components/TaskForm/TaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      id: Math.random().toString(36).substr(2, 9),\n      // Generate a random id\n      title,\n      description,\n      status: 'TODO' // Default status when creating a new task\n    };\n    addTask(newTask);\n    setTitle('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      sx: {\n        width: \"30%\"\n      },\n      id: \"fullWidth\",\n      type: \"text\",\n      placeholder: \"Task Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Task Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskForm;\nexport default TaskForm;\n\n// // src/components/TaskForm.tsx\n\n// import React, { useState } from 'react';\n// import { Task as TaskType } from '../types';\n\n// interface TaskFormProps {\n//   addTask: (task: TaskType) => void; // Update to accept a Task object\n//   status: 'TODO' | 'DOING' | 'DONE'; // Accept the status as a prop\n// }\n\n// const TaskForm: React.FC<TaskFormProps> = ({ addTask, status }) => {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   const handleSubmit = (e: React.FormEvent) => {\n//     e.preventDefault();\n//     const newTask: TaskType = {\n//       id: Math.random().toString(36).substr(2, 9), // Generate a random id\n//       title,\n//       description,\n//       status,\n//     };\n//     addTask(newTask); // Pass the entire task object\n//     setTitle('');\n//     setDescription('');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Task Title\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         required\n//       />\n//       <textarea\n//         placeholder=\"Task Description\"\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         required\n//       />\n//       <button type=\"submit\">Add Task</button>\n//     </form>\n//   );\n// };\n\n// export default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Button","TextField","jsxDEV","_jsxDEV","TaskForm","addTask","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","newTask","id","Math","random","toString","substr","status","onSubmit","children","sx","width","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Documents/assign/kanban-todo/src/components/TaskForm/TaskForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Task as TaskType } from '../types';\nimport { Button, TextField } from '@mui/material';\n\ninterface TaskFormProps {\n  addTask: (task: TaskType) => void;\n}\n\nconst TaskForm: React.FC<TaskFormProps> = ({ addTask }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const newTask: TaskType = {\n      id: Math.random().toString(36).substr(2, 9), // Generate a random id\n      title,\n      description,\n      status: 'TODO', // Default status when creating a new task\n    };\n    addTask(newTask);\n    setTitle('');\n    setDescription('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n      sx={{width:\"30%\"}}\n        id=\"fullWidth\"\n        type=\"text\"\n        placeholder=\"Task Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      />\n      <TextField\n        placeholder=\"Task Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n      <Button type=\"submit\">Add Task</Button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n\n\n\n\n\n\n\n\n\n// // src/components/TaskForm.tsx\n\n// import React, { useState } from 'react';\n// import { Task as TaskType } from '../types';\n\n// interface TaskFormProps {\n//   addTask: (task: TaskType) => void; // Update to accept a Task object\n//   status: 'TODO' | 'DOING' | 'DONE'; // Accept the status as a prop\n// }\n\n// const TaskForm: React.FC<TaskFormProps> = ({ addTask, status }) => {\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   const handleSubmit = (e: React.FormEvent) => {\n//     e.preventDefault();\n//     const newTask: TaskType = {\n//       id: Math.random().toString(36).substr(2, 9), // Generate a random id\n//       title,\n//       description,\n//       status,\n//     };\n//     addTask(newTask); // Pass the entire task object\n//     setTitle('');\n//     setDescription('');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Task Title\"\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         required\n//       />\n//       <textarea\n//         placeholder=\"Task Description\"\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         required\n//       />\n//       <button type=\"submit\">Add Task</button>\n//     </form>\n//   );\n// };\n\n// export default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAiB,GAAG;MACxBC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE;MAC7CZ,KAAK;MACLE,WAAW;MACXW,MAAM,EAAE,MAAM,CAAE;IAClB,CAAC;IACDf,OAAO,CAACS,OAAO,CAAC;IAChBN,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAMkB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BnB,OAAA,CAACF,SAAS;MACVsB,EAAE,EAAE;QAACC,KAAK,EAAC;MAAK,CAAE;MAChBT,EAAE,EAAC,WAAW;MACdU,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGhB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA,CAACF,SAAS;MACRyB,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGhB,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA,CAACH,MAAM;MAACyB,IAAI,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CArCIF,QAAiC;AAAA+B,EAAA,GAAjC/B,QAAiC;AAuCvC,eAAeA,QAAQ;;AAUvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}