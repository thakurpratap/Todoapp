{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Documents/assign/kanban-todo/src/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\n// src/KanbanBoard.tsx\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = {\n  TODO: [],\n  DOING: [],\n  DONE: []\n};\nconst KanbanBoard = () => {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n  const handleAddTask = () => {\n    const newId = Date.now().toString();\n    setTasks(prev => ({\n      ...prev,\n      TODO: [...prev.TODO, {\n        id: newId,\n        ...newTask\n      }]\n    }));\n    setNewTask({\n      title: '',\n      description: ''\n    });\n  };\n  const handleEditTask = (id, status) => {\n    const editedTitle = prompt('Edit title:');\n    const editedDescription = prompt('Edit description:');\n    if (editedTitle && editedDescription) {\n      setTasks(prev => ({\n        ...prev,\n        [status]: prev[status].map(task => task.id === id ? {\n          ...task,\n          title: editedTitle,\n          description: editedDescription\n        } : task)\n      }));\n    }\n  };\n  const handleDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceStatus = source.droppableId;\n    const destinationStatus = destination.droppableId;\n    const sourceTasks = Array.from(tasks[sourceStatus]);\n    const [movedTask] = sourceTasks.splice(source.index, 1);\n    setTasks(prev => ({\n      ...prev,\n      [sourceStatus]: sourceTasks,\n      [destinationStatus]: [...prev[destinationStatus], {\n        ...movedTask\n      }]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban TODO App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Title\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task Description\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: ['TODO', 'DOING', 'DONE'].map(status => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: status,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            margin: '10px',\n            padding: '10px',\n            backgroundColor: status === 'TODO' ? 'yellow' : status === 'DOING' ? 'blue' : 'green',\n            color: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), tasks[status].map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: {\n                padding: '10px',\n                margin: '5px',\n                border: '1px solid black',\n                borderRadius: '5px',\n                backgroundColor: 'white',\n                ...provided.draggableProps.style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTask(task.id, status),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"vqRl/7nyDNsHjS6AqanDAmfXwe8=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialTasks","TODO","DOING","DONE","KanbanBoard","_s","tasks","setTasks","newTask","setNewTask","title","description","handleAddTask","newId","Date","now","toString","prev","id","handleEditTask","status","editedTitle","prompt","editedDescription","map","task","handleDragEnd","result","source","destination","sourceStatus","droppableId","destinationStatus","sourceTasks","Array","from","movedTask","splice","index","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onDragEnd","provided","ref","innerRef","droppableProps","style","border","borderRadius","margin","padding","backgroundColor","color","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Documents/assign/kanban-todo/src/KanbanBoard.tsx"],"sourcesContent":["// src/KanbanBoard.tsx\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\ninterface Task {\n  id: string;\n  title: string;\n  description: string;\n}\n\ntype TaskStatus = 'TODO' | 'DOING' | 'DONE';\n\nconst initialTasks: Record<TaskStatus, Task[]> = {\n  TODO: [],\n  DOING: [],\n  DONE: [],\n};\n\nconst KanbanBoard: React.FC = () => {\n  const [tasks, setTasks] = useState(initialTasks);\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\n  \n  const handleAddTask = () => {\n    const newId = Date.now().toString();\n    setTasks((prev) => ({\n      ...prev,\n      TODO: [...prev.TODO, { id: newId, ...newTask }],\n    }));\n    setNewTask({ title: '', description: '' });\n  };\n\n  const handleEditTask = (id: string, status: TaskStatus) => {\n    const editedTitle = prompt('Edit title:');\n    const editedDescription = prompt('Edit description:');\n    \n    if (editedTitle && editedDescription) {\n      setTasks((prev) => ({\n        ...prev,\n        [status]: prev[status].map(task =>\n          task.id === id ? { ...task, title: editedTitle, description: editedDescription } : task\n        ),\n      }));\n    }\n  };\n\n  const handleDragEnd = (result: any) => {\n    const { source, destination } = result;\n\n    if (!destination) return;\n\n    const sourceStatus: TaskStatus = source.droppableId as TaskStatus;\n    const destinationStatus: TaskStatus = destination.droppableId as TaskStatus;\n\n    const sourceTasks = Array.from(tasks[sourceStatus]);\n    const [movedTask] = sourceTasks.splice(source.index, 1);\n\n    setTasks((prev) => ({\n      ...prev,\n      [sourceStatus]: sourceTasks,\n      [destinationStatus]: [...prev[destinationStatus], { ...movedTask }],\n    }));\n  };\n\n  return (\n    <div>\n      <h1>Kanban TODO App</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Task Title\"\n        value={newTask.title}\n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n      />\n      <textarea\n        placeholder=\"Task Description\"\n        value={newTask.description}\n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {(['TODO', 'DOING', 'DONE'] as TaskStatus[]).map((status) => (\n          <Droppable droppableId={status} key={status}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{\n                  border: '1px solid #ccc',\n                  borderRadius: '5px',\n                  margin: '10px',\n                  padding: '10px',\n                  backgroundColor: status === 'TODO' ? 'yellow' : status === 'DOING' ? 'blue' : 'green',\n                  color: 'black',\n                }}\n              >\n                <h2>{status}</h2>\n                {tasks[status].map((task, index) => (\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          padding: '10px',\n                          margin: '5px',\n                          border: '1px solid black',\n                          borderRadius: '5px',\n                          backgroundColor: 'white',\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        <h4>{task.title}</h4>\n                        <p>{task.description}</p>\n                        <button onClick={() => handleEditTask(task.id, status)}>Edit</button>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU5E,MAAMC,YAAwC,GAAG;EAC/CC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACM,YAAY,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEtE,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACnCT,QAAQ,CAAEU,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPhB,IAAI,EAAE,CAAC,GAAGgB,IAAI,CAAChB,IAAI,EAAE;QAAEiB,EAAE,EAAEL,KAAK;QAAE,GAAGL;MAAQ,CAAC;IAChD,CAAC,CAAC,CAAC;IACHC,UAAU,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAACD,EAAU,EAAEE,MAAkB,KAAK;IACzD,MAAMC,WAAW,GAAGC,MAAM,CAAC,aAAa,CAAC;IACzC,MAAMC,iBAAiB,GAAGD,MAAM,CAAC,mBAAmB,CAAC;IAErD,IAAID,WAAW,IAAIE,iBAAiB,EAAE;MACpChB,QAAQ,CAAEU,IAAI,KAAM;QAClB,GAAGA,IAAI;QACP,CAACG,MAAM,GAAGH,IAAI,CAACG,MAAM,CAAC,CAACI,GAAG,CAACC,IAAI,IAC7BA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGO,IAAI;UAAEf,KAAK,EAAEW,WAAW;UAAEV,WAAW,EAAEY;QAAkB,CAAC,GAAGE,IACrF;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMC,aAAa,GAAIC,MAAW,IAAK;IACrC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IAEtC,IAAI,CAACE,WAAW,EAAE;IAElB,MAAMC,YAAwB,GAAGF,MAAM,CAACG,WAAyB;IACjE,MAAMC,iBAA6B,GAAGH,WAAW,CAACE,WAAyB;IAE3E,MAAME,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC7B,KAAK,CAACwB,YAAY,CAAC,CAAC;IACnD,MAAM,CAACM,SAAS,CAAC,GAAGH,WAAW,CAACI,MAAM,CAACT,MAAM,CAACU,KAAK,EAAE,CAAC,CAAC;IAEvD/B,QAAQ,CAAEU,IAAI,KAAM;MAClB,GAAGA,IAAI;MACP,CAACa,YAAY,GAAGG,WAAW;MAC3B,CAACD,iBAAiB,GAAG,CAAC,GAAGf,IAAI,CAACe,iBAAiB,CAAC,EAAE;QAAE,GAAGI;MAAU,CAAC;IACpE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACErC,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAAwC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5C,OAAA;MACE6C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEtC,OAAO,CAACE,KAAM;MACrBqC,QAAQ,EAAGC,CAAC,IAAKvC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEE,KAAK,EAAEsC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACF5C,OAAA;MACE8C,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEtC,OAAO,CAACG,WAAY;MAC3BoC,QAAQ,EAAGC,CAAC,IAAKvC,UAAU,CAAC;QAAE,GAAGD,OAAO;QAAEG,WAAW,EAAEqC,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACF5C,OAAA;MAAQmD,OAAO,EAAEtC,aAAc;MAAA2B,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjD5C,OAAA,CAACJ,eAAe;MAACwD,SAAS,EAAEzB,aAAc;MAAAa,QAAA,EACtC,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAkBf,GAAG,CAAEJ,MAAM,iBACtDrB,OAAA,CAACH,SAAS;QAACmC,WAAW,EAAEX,MAAO;QAAAmB,QAAA,EAC3Ba,QAAQ,iBACRrD,OAAA;UACEsD,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAC3BC,KAAK,EAAE;YACLC,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE,MAAM;YACfC,eAAe,EAAEzC,MAAM,KAAK,MAAM,GAAG,QAAQ,GAAGA,MAAM,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;YACrF0C,KAAK,EAAE;UACT,CAAE;UAAAvB,QAAA,gBAEFxC,OAAA;YAAAwC,QAAA,EAAKnB;UAAM;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAChBrC,KAAK,CAACc,MAAM,CAAC,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEa,KAAK,kBAC7BvC,OAAA,CAACF,SAAS;YAAekE,WAAW,EAAEtC,IAAI,CAACP,EAAG;YAACoB,KAAK,EAAEA,KAAM;YAAAC,QAAA,EACxDa,QAAQ,iBACRrD,OAAA;cACEsD,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GACnBF,QAAQ,CAACY,cAAc;cAAA,GACvBZ,QAAQ,CAACa,eAAe;cAC5BT,KAAK,EAAE;gBACLI,OAAO,EAAE,MAAM;gBACfD,MAAM,EAAE,KAAK;gBACbF,MAAM,EAAE,iBAAiB;gBACzBC,YAAY,EAAE,KAAK;gBACnBG,eAAe,EAAE,OAAO;gBACxB,GAAGT,QAAQ,CAACY,cAAc,CAACR;cAC7B,CAAE;cAAAjB,QAAA,gBAEFxC,OAAA;gBAAAwC,QAAA,EAAKd,IAAI,CAACf;cAAK;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrB5C,OAAA;gBAAAwC,QAAA,EAAId,IAAI,CAACd;cAAW;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzB5C,OAAA;gBAAQmD,OAAO,EAAEA,CAAA,KAAM/B,cAAc,CAACM,IAAI,CAACP,EAAE,EAAEE,MAAM,CAAE;gBAAAmB,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE;UACN,GAnBalB,IAAI,CAACP,EAAE;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBZ,CACZ,CAAC,EACDS,QAAQ,CAACP,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN,GAxCkCvB,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyChC,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACtC,EAAA,CA7GID,WAAqB;AAAA8D,EAAA,GAArB9D,WAAqB;AA+G3B,eAAeA,WAAW;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}