{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Documents/assign/kanban-todo/src/components/Task/Task.tsx\";\n// src/components/Task.tsx\n\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task,\n  index,\n  onClick\n}) => {\n  const getColor = status => {\n    switch (status) {\n      case 'TODO':\n        return 'yellow';\n      case 'DOING':\n        return 'blue';\n      case 'DONE':\n        return 'green';\n      default:\n        return 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      // onClick={onClick} // Handle click to open modal\n      style: {\n        backgroundColor: getColor(task.status),\n        border: '1px solid black',\n        borderRadius: \"10px\",\n        padding: '10px',\n        margin: '5px',\n        cursor: 'grab',\n        ...provided.draggableProps.style\n      },\n      children: [/*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Titel : \", task.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description : \", task.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), \"24th Oct\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n            onClick: onClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","Draggable","AccessTimeIcon","VisibilityIcon","ClearIcon","jsxDEV","_jsxDEV","Task","task","index","onClick","getColor","status","draggableId","id","children","provided","ref","innerRef","draggableProps","dragHandleProps","style","backgroundColor","border","borderRadius","padding","margin","cursor","fileName","_jsxFileName","lineNumber","columnNumber","title","description","className","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Documents/assign/kanban-todo/src/components/Task/Task.tsx"],"sourcesContent":["// src/components/Task.tsx\n\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Task as TaskType } from '../types';\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\ninterface TaskProps {\n  task: TaskType;\n  index: number; // Position in the list\n  onClick: () => void; // Handle click to open modal\n  onDelete: () => void;\n}\n\nconst Task: React.FC<TaskProps> = ({ task, index,onClick }) => {\n    const getColor = (status: string) => {\n      switch (status) {\n        case 'TODO':\n          return 'yellow';\n        case 'DOING':\n          return 'blue';\n        case 'DONE':\n          return 'green';\n        default:\n          return 'white';\n      }\n    };\n\n  return (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          // onClick={onClick} // Handle click to open modal\n          style={{\n            backgroundColor: getColor(task.status),\n            border: '1px solid black',\n            borderRadius: \"10px\",\n            padding: '10px',\n            margin: '5px',\n            cursor: 'grab',\n            ...provided.draggableProps.style,\n          }}\n        >\n             <ClearIcon\n            />\n          <h3>Titel : {task.title}</h3>\n          <p>Description : {task.description}</p>\n\n          <div className=\"card_footer\">\n            <p>\n              <AccessTimeIcon />\n              24th Oct\n            </p>\n            <p>\n              <VisibilityIcon onClick={onClick}/>\n            </p>\n          </div>\n\n\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlD,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAACC;AAAQ,CAAC,KAAK;EAC3D,MAAMC,QAAQ,GAAIC,MAAc,IAAK;IACnC,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,QAAQ;MACjB,KAAK,OAAO;QACV,OAAO,MAAM;MACf,KAAK,MAAM;QACT,OAAO,OAAO;MAChB;QACE,OAAO,OAAO;IAClB;EACF,CAAC;EAEH,oBACEN,OAAA,CAACL,SAAS;IAAeY,WAAW,EAAEL,IAAI,CAACM,EAAG;IAACL,KAAK,EAAEA,KAAM;IAAAM,QAAA,EACxDC,QAAQ,iBACRV,OAAA;MACEW,GAAG,EAAED,QAAQ,CAACE,QAAS;MAAA,GACnBF,QAAQ,CAACG,cAAc;MAAA,GACvBH,QAAQ,CAACI,eAAe;MAC5B;MACAC,KAAK,EAAE;QACLC,eAAe,EAAEX,QAAQ,CAACH,IAAI,CAACI,MAAM,CAAC;QACtCW,MAAM,EAAE,iBAAiB;QACzBC,YAAY,EAAE,MAAM;QACpBC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE,MAAM;QACd,GAAGX,QAAQ,CAACG,cAAc,CAACE;MAC7B,CAAE;MAAAN,QAAA,gBAECT,OAAA,CAACF,SAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACJzB,OAAA;QAAAS,QAAA,GAAI,UAAQ,EAACP,IAAI,CAACwB,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BzB,OAAA;QAAAS,QAAA,GAAG,gBAAc,EAACP,IAAI,CAACyB,WAAW;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEvCzB,OAAA;QAAK4B,SAAS,EAAC,aAAa;QAAAnB,QAAA,gBAC1BT,OAAA;UAAAS,QAAA,gBACET,OAAA,CAACJ,cAAc;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YAEpB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJzB,OAAA;UAAAS,QAAA,eACET,OAAA,CAACH,cAAc;YAACO,OAAO,EAAEA;UAAQ;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH;EACN,GAlCavB,IAAI,CAACM,EAAE;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmCZ,CAAC;AAEhB,CAAC;AAACI,EAAA,GApDI5B,IAAyB;AAsD/B,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}