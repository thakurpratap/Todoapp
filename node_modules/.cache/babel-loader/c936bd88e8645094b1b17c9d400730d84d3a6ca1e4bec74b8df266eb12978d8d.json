{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Documents/assign/kanban-todo/src/components/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\n// src/components/KanbanBoard.tsx\n\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const addTask = e => {\n    e.preventDefault();\n    if (!title || !description) return;\n    const newTask = {\n      id: Date.now().toString(),\n      title,\n      description,\n      status: 'TODO'\n    };\n    setTasks([...tasks, newTask]);\n    setTitle('');\n    setDescription('');\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const updatedTasks = Array.from(tasks);\n    const [movedTask] = updatedTasks.splice(result.source.index, 1);\n\n    // Set the new status based on the destination droppableId\n    movedTask.status = result.destination.droppableId;\n    updatedTasks.splice(result.destination.index, 0, movedTask);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban TODO App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: ['TODO', 'DOING', 'DONE'].map(status => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              width: '30%',\n              padding: '10px',\n              border: '1px solid black',\n              backgroundColor: status === 'TODO' ? 'lightyellow' : status === 'DOING' ? 'lightblue' : 'lightgreen'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), tasks.filter(task => task.status === status).map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              index: index\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"ojLxN63+SETj26UMVER7BDwKHyg=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","Task","DragDropContext","Droppable","jsxDEV","_jsxDEV","KanbanBoard","_s","tasks","setTasks","title","setTitle","description","setDescription","addTask","e","preventDefault","newTask","id","Date","now","toString","status","onDragEnd","result","destination","updatedTasks","Array","from","movedTask","splice","source","index","droppableId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","display","justifyContent","map","provided","ref","innerRef","droppableProps","width","padding","border","backgroundColor","filter","task","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Documents/assign/kanban-todo/src/components/KanbanBoard.tsx"],"sourcesContent":["// src/components/KanbanBoard.tsx\n\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Task as TaskType } from '../types';\n\nconst KanbanBoard: React.FC = () => {\n  const [tasks, setTasks] = useState<TaskType[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const addTask = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!title || !description) return;\n    const newTask: TaskType = {\n      id: Date.now().toString(),\n      title,\n      description,\n      status: 'TODO',\n    };\n    setTasks([...tasks, newTask]);\n    setTitle('');\n    setDescription('');\n  };\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination) return;\n\n    const updatedTasks = Array.from(tasks);\n    const [movedTask] = updatedTasks.splice(result.source.index, 1);\n\n    // Set the new status based on the destination droppableId\n    movedTask.status = result.destination.droppableId;\n    updatedTasks.splice(result.destination.index, 0, movedTask);\n\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div>\n      <h1>Kanban TODO App</h1>\n      <form onSubmit={addTask}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {['TODO', 'DOING', 'DONE'].map((status) => (\n            <Droppable key={status} droppableId={status}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  style={{\n                    width: '30%',\n                    padding: '10px',\n                    border: '1px solid black',\n                    backgroundColor: status === 'TODO' ? 'lightyellow' : status === 'DOING' ? 'lightblue' : 'lightgreen',\n                  }}\n                >\n                  <h2>{status}</h2>\n                  {tasks\n                    .filter(task => task.status === status)\n                    .map((task, index) => (\n                      <Task key={task.id} task={task} index={index} />\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}