{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Documents/assign/kanban-todo/src/components/Task.tsx\";\n// src/components/Task.tsx\n\nimport React from 'react';\nimport { Draggable } from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task,\n  onDrag\n}) => {\n  const getColor = status => {\n    switch (status) {\n      case 'TODO':\n        return 'yellow';\n      case 'DOING':\n        return 'blue';\n      case 'DONE':\n        return 'green';\n      default:\n        return 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    onDrag: (e, data) => onDrag(task.id, task.status),\n    axis: \"y\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: getColor(task.status),\n        border: '1px solid black',\n        padding: '10px',\n        margin: '5px',\n        cursor: 'grab'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","Draggable","jsxDEV","_jsxDEV","Task","task","onDrag","getColor","status","e","data","id","axis","children","style","backgroundColor","border","padding","margin","cursor","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Documents/assign/kanban-todo/src/components/Task.tsx"],"sourcesContent":["// src/components/Task.tsx\n\nimport React from 'react';\nimport { Draggable } from 'react-draggable';\nimport { Task as TaskType } from '../types';\n\ninterface TaskProps {\n  task: TaskType;\n  onDrag: (id: string, status: string) => void;\n}\n\nconst Task: React.FC<TaskProps> = ({ task, onDrag }) => {\n  const getColor = (status: string) => {\n    switch (status) {\n      case 'TODO':\n        return 'yellow';\n      case 'DOING':\n        return 'blue';\n      case 'DONE':\n        return 'green';\n      default:\n        return 'white';\n    }\n  };\n\n  return (\n    <Draggable\n      onDrag={(e, data) => onDrag(task.id, task.status)}\n      axis=\"y\"\n    >\n      <div style={{\n        backgroundColor: getColor(task.status),\n        border: '1px solid black',\n        padding: '10px',\n        margin: '5px',\n        cursor: 'grab'\n      }}>\n        <h3>{task.title}</h3>\n        <p>{task.description}</p>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default Task;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EACtD,MAAMC,QAAQ,GAAIC,MAAc,IAAK;IACnC,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,QAAQ;MACjB,KAAK,OAAO;QACV,OAAO,MAAM;MACf,KAAK,MAAM;QACT,OAAO,OAAO;MAChB;QACE,OAAO,OAAO;IAClB;EACF,CAAC;EAED,oBACEL,OAAA,CAACF,SAAS;IACRK,MAAM,EAAEA,CAACG,CAAC,EAAEC,IAAI,KAAKJ,MAAM,CAACD,IAAI,CAACM,EAAE,EAAEN,IAAI,CAACG,MAAM,CAAE;IAClDI,IAAI,EAAC,GAAG;IAAAC,QAAA,eAERV,OAAA;MAAKW,KAAK,EAAE;QACVC,eAAe,EAAER,QAAQ,CAACF,IAAI,CAACG,MAAM,CAAC;QACtCQ,MAAM,EAAE,iBAAiB;QACzBC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE;MACV,CAAE;MAAAN,QAAA,gBACAV,OAAA;QAAAU,QAAA,EAAKR,IAAI,CAACe;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBrB,OAAA;QAAAU,QAAA,EAAIR,IAAI,CAACoB;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACE,EAAA,GA/BItB,IAAyB;AAiC/B,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}